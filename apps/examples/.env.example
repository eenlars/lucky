# examples environment configuration
# copy this file to .env and fill in your values

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# persistence configuration
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# use mock (in-memory) persistence instead of supabase
# set to "true" to run examples without supabase credentials
# set to "false" to use real supabase backend
USE_MOCK_PERSISTENCE=true

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# supabase configuration (optional if USE_MOCK_PERSISTENCE=true)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# supabase project id (found in project settings)
# SUPABASE_PROJECT_ID=your_project_id_here

# supabase anonymous key (found in project settings > api)
# SUPABASE_ANON_KEY=your_anon_key_here

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# required api keys (for workflow execution)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# openai api key (required)
OPENAI_API_KEY=your_openai_key_here

# google api key (required)
GOOGLE_API_KEY=your_google_key_here

# serpapi api key (required)
SERPAPI_API_KEY=your_serpapi_key_here

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# optional api keys
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# openrouter api key (for additional model providers)
# OPENROUTER_API_KEY=your_openrouter_key_here

# tavily api key (for web search)
# TAVILY_API_KEY=your_tavily_key_here

# firecrawl api key (for web scraping)
# FIRECRAWL_API_KEY=your_firecrawl_key_here

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# quick start
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# 1. copy this file to .env:
#    cp .env.example .env

# 2. add your api keys (at minimum: OPENAI_API_KEY, GOOGLE_API_KEY, SERPAPI_API_KEY)

# 3. run examples:
#    bun run examples/simple-workflow.ts

# examples will use in-memory storage by default (USE_MOCK_PERSISTENCE=true)
# no supabase credentials needed!
